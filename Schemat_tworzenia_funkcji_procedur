Skrypt to stworzenia funkcji i procedur w bazie danych

Polecenia należy uruchamiać pojedyczno - w przeciwnym wypadku operacja nie powiedzie się

CREATE OR REPLACE PROCEDURE NowyUser(
    VIMIE IN VARCHAR,
    VNAZWISKO IN VARCHAR,
    VLOGIN IN VARCHAR,
    VHASLO IN VARCHAR,
    VULICA IN VARCHAR,
    VNR_DOMU IN NUMBER,
    VNR_MIESZKANIA IN NUMBER,
    VKOD_POCZTOWY IN NUMBER,
    VMIEJSCOWOSC IN VARCHAR,
    VEMAIL IN VARCHAR,
    VNR_TELEFONU1 IN NUMBER,
    VNR_TELEFONU2 IN NUMBER
    ) IS
BEGIN
    INSERT INTO ADRESY(ULICA, NR_DOMU,NR_MIESZKANIA, KOD_POCZTOWY, MIEJSCOWOSC) VALUES (VULICA, VNR_DOMU, VNR_MIESZKANIA, VKOD_POCZTOWY, VMIEJSCOWOSC);
    INSERT INTO KONTAKTY(EMAIL, NR_TELEFONU1, NR_TELEFONU2) VALUES (VEMAIL, VNR_TELEFONU1, VNR_TELEFONU2);
    INSERT INTO DANE_LOGOWANIA VALUES(VLOGIN, VHASLO);
    INSERT INTO KLIENCI(IMIE, NAZWISKO, LOGIN, ID_ADRESU, ID_KONTAKTU) VALUES (VIMIE, VNAZWISKO, VLOGIN , ADR_SEQ.CURRVAL, KONTAKT_SEQ.CURRVAL);
END NowyUser;

CREATE OR REPLACE FUNCTION LACZNA_WARTOSC_NA_KATEGORIE
     (VID_KLIENTA IN NUMBER,
     VNAZWA IN VARCHAR)
     RETURN NUMBER IS
     VSUMAWYDANA NUMBER(12, 2);
BEGIN
     SELECT SUM(P.KWOTA) INTO VSUMAWYDANA
     FROM TRANSAKCJE T LEFT JOIN PLATNOSCI P ON P.ID_PLATNOSCI = T.ID_PLATNOSCI
     WHERE T.ID_KATEGORII IN (SELECT ID_KATEGORII FROM KATEGORIE WHERE NAZWA_KATEGORII LIKE VNAZWA)
     AND T.ID_KLIENTA = VID_KLIENTA
     AND T.DATA BETWEEN EXTRACT(YEAR FROM CURRENT_DATE) || '/' || EXTRACT(MONTH FROM CURRENT_DATE) || '/01' AND CURRENT_DATE;

     RETURN VSUMAWYDANA;
END LACZNA_WARTOSC_NA_KATEGORIE;

CREATE OR REPLACE PROCEDURE NowaTransakcja(
    VID IN NUMBER,
    VKWOTA IN VARCHAR,
    VSKLEP IN VARCHAR,
    VKATEGORIA IN VARCHAR,
    VDATA IN VARCHAR,
    VSPOSOB IN VARCHAR,
    VOCENA IN NUMBER,
    VKOMENTARZ IN VARCHAR
    ) IS
BEGIN
    INSERT INTO PLATNOSCI(KWOTA, SPOSOB, ID_KLIENTA)
    VALUES
    (CAST(VKWOTA as NUMBER(14,2)), VSPOSOB, VID);

    INSERT INTO TRANSAKCJE(ID_KLIENTA, NAZWA_SKLEPU, ID_KATEGORII, DATA, ID_PLATNOSCI, OCENA, KOMENTARZ)
    VALUES
    (VID, VSKLEP, (SELECT ID_KATEGORII FROM KATEGORIE WHERE NAZWA_KATEGORII LIKE VKATEGORIA), CAST(VDATA AS DATE), PLAT_SEQ.CURRVAL, VOCENA, VKOMENTARZ );

    UPDATE SKLEPY SET OCENA = (SELECT ROUND(((COUNT(OCENA)* AVG(OCENA) + VOCENA) / (COUNT(OCENA) + 1)), 1)  FROM TRANSAKCJE WHERE NAZWA_SKLEPU LIKE VSKLEP) WHERE NAZWA_SKLEPU LIKE VSKLEP;

END NowaTransakcja;


CREATE OR REPLACE PROCEDURE updateUserInformation(
    VIMIE IN VARCHAR,
    VNAZWISKO IN VARCHAR,
    VLOGIN IN VARCHAR,
    VHASLO IN VARCHAR,
    VULICA IN VARCHAR,
    VNR_DOMU IN NUMBER,
    VNR_MIESZKANIA IN NUMBER,
    VKOD_POCZTOWY IN NUMBER,
    VMIEJSCOWOSC IN VARCHAR,
    VEMAIL IN VARCHAR,
    VNR_TELEFONU1 IN NUMBER,
    VNR_TELEFONU2 IN NUMBER,
    VID_ADRESSU IN NUMBER,
    VID_KONTAKTU IN NUMBER,
    VLOGIN2 IN VARCHAR,
    VID IN NUMBER
    ) IS
BEGIN
    UPDATE ADRESY SET ULICA = VULICA, NR_DOMU = VNR_DOMU, NR_MIESZKANIA = VNR_MIESZKANIA, KOD_POCZTOWY = VKOD_POCZTOWY, MIEJSCOWOSC = VMIEJSCOWOSC WHERE ID_ADRESU = VID_ADRESSU;
    UPDATE KONTAKTY SET EMAIL = VEMAIL, NR_TELEFONU1 = VNR_TELEFONU1, NR_TELEFONU2 = VNR_TELEFONU2 WHERE ID_KONTAKTU = VID_KONTAKTU;
    UPDATE DANE_LOGOWANIA SET LOGIN = VLOGIN, HASLO = VHASLO WHERE LOGIN = VLOGIN2;
    UPDATE KLIENCI SET IMIE = VIMIE, NAZWISKO = VNAZWISKO, LOGIN = VLOGIN WHERE ID_KLIENTA = VID;
END updateUserInformation;