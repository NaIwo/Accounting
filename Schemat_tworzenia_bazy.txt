Skrypt do stworzenia bazy

CREATE SEQUENCE trans_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE klient_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE kat_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE plat_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE ogr_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE adr_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE kontakt_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE KONTAKTY (
    ID_KONTAKTU NUMBER(5) DEFAULT KONTAKT_SEQ.NEXTVAL CONSTRAINT PK_KONTAKT PRIMARY KEY,
    EMAIL VARCHAR2(30) NOT NULL,
    NR_TELEFONU1 NUMBER(9),
    NR_TELEFONU2 NUMBER(9)
);

CREATE TABLE ADRESY (
    ID_ADRESU NUMBER(5) DEFAULT ADR_SEQ.NEXTVAL CONSTRAINT PK_ADRES PRIMARY KEY,
    ULICA VARCHAR2(15) NOT NULL,
    NR_DOMU NUMBER(4) NOT NULL,
    NR_MIESZKANIA NUMBER(3),
    KOD_POCZTOWY NUMBER(6) NOT NULL,
    MIEJSCOWOSC VARCHAR2(20) NOT NULL 
);

CREATE TABLE DANE_LOGOWANIA (
    LOGIN VARCHAR2(20) CONSTRAINT PK_DANE PRIMARY KEY,
    HASLO VARCHAR2(20) NOT NULL
);

CREATE TABLE KLIENCI (
    ID_KLIENTA NUMBER(5) DEFAULT KLIENT_SEQ.NEXTVAL CONSTRAINT PK_KLIENT PRIMARY KEY,
    IMIE VARCHAR2(15) NOT NULL,
    NAZWISKO VARCHAR2(15) NOT NULL,
    LOGIN VARCHAR2(20) CONSTRAINT FK_LOGIN REFERENCES DANE_LOGOWANIA(LOGIN),
    ID_ADRESU NUMBER(5) CONSTRAINT FK_ADRES REFERENCES ADRESY(ID_ADRESU),
    ID_KONTAKTU NUMBER(5) CONSTRAINT FK_KONTAKT REFERENCES KONTAKTY(ID_KONTAKTU)
);

CREATE TABLE SKLEPY (
    NAZWA_SKLEPU VARCHAR2(20) CONSTRAINT PK_SKLEPY PRIMARY KEY,
    OCENA NUMBER(3,2) NOT NULL,
    ID_KLIENTA NUMBER(5) CONSTRAINT FK_KLIENT_SKLEP REFERENCES KLIENCI(ID_KLIENTA)
);

CREATE TABLE KATEGORIE (
    ID_KATEGORII NUMBER(5) DEFAULT KAT_SEQ.NEXTVAL CONSTRAINT PK_KATEGORIE PRIMARY KEY,
    NAZWA_KATEGORII VARCHAR2(20) NOT NULL,
    ID_KLIENTA NUMBER(5) CONSTRAINT FK_KLIENT_KATEGORIA REFERENCES KLIENCI(ID_KLIENTA)
);

CREATE TABLE PLATNOSCI (
    ID_PLATNOSCI NUMBER(5) DEFAULT PLAT_SEQ.NEXTVAL CONSTRAINT PK_PLATNOSCI PRIMARY KEY,
    KWOTA NUMBER(14,2) NOT NULL,
    SPOSOB VARCHAR2(20) NOT NULL,
    ID_KLIENTA NUMBER(5) CONSTRAINT FK_KLIENT_PLATNOSC REFERENCES KLIENCI(ID_KLIENTA)
);

CREATE TABLE OGRANICZENIA (
    ID_OGRANICZENIA NUMBER(5) DEFAULT OGR_SEQ.NEXTVAL CONSTRAINT PK_OGRANICZENIA PRIMARY KEY,
    ID_KLIENTA NUMBER(5) CONSTRAINT FK_KLIENT_OGRANICZENIA REFERENCES KLIENCI(ID_KLIENTA),
    ID_KATEGORII NUMBER(5) CONSTRAINT FK_KATEGORIA_OGRANICZENIA REFERENCES KATEGORIE(ID_KATEGORII),
    WARTOSC_OGRANICZENIA NUMBER(14,2) NOT NULL,
    ALARM VARCHAR2(100)
);

CREATE TABLE TRANSAKCJE (
    ID_TRANSAKCJI NUMBER(5) DEFAULT TRANS_SEQ.NEXTVAL CONSTRAINT PK_TRANSAKCJE PRIMARY KEY,
    ID_KLIENTA NUMBER(5) CONSTRAINT FK_KLIENT_TRANSAKCJE REFERENCES KLIENCI(ID_KLIENTA),
    NAZWA_SKLEPU VARCHAR2(20) CONSTRAINT FK_SKLEP_TRANSAKCJE REFERENCES SKLEPY(NAZWA_SKLEPU),
    ID_KATEGORII NUMBER(5) CONSTRAINT FK_KATEGORIA_TRANSAKCJE REFERENCES KATEGORIE(ID_KATEGORII),
    DATA DATE DEFAULT CURRENT_DATE,
    ID_PLATNOSCI NUMBER(5) CONSTRAINT FK_PLATNOSC_TRANSAKCJE REFERENCES PLATNOSCI(ID_PLATNOSCI),
    OCENA NUMBER(2) NOT NULL,
    KOMENTARZ VARCHAR2(50)
);

CREATE TABLE SUBSKRYPCJE (
    ID_KLIENTA NUMBER(5) CONSTRAINT FK_KLIENT_SUBKSRYPCJE REFERENCES KLIENCI(ID_KLIENTA),
    NAZWA_SKLEPU VARCHAR2(20),
    NAZWA_KATEGORII VARCHAR2(20),
    SPOSOB_PLATNOSCI VARCHAR2(20),
    OCENA NUMBER(2),
    KOMENTARZ VARCHAR2(50)
);

CREATE OR REPLACE PROCEDURE NowyUser(
    VIMIE IN VARCHAR,
    VNAZWISKO IN VARCHAR,
    VLOGIN IN VARCHAR, 
    VHASLO IN VARCHAR,
    VULICA IN VARCHAR,
    VNR_DOMU IN NUMBER,
    VNR_MIESZKANIA IN NUMBER,
    VKOD_POCZTOWY IN NUMBER,
    VMIEJSCOWOSC IN VARCHAR,
    VEMAIL IN VARCHAR,
    VNR_TELEFONU1 IN NUMBER,
    VNR_TELEFONU2 IN NUMBER
    ) IS
BEGIN
    INSERT INTO ADRESY(ULICA, NR_DOMU,NR_MIESZKANIA, KOD_POCZTOWY, MIEJSCOWOSC) VALUES (VULICA, VNR_DOMU, VNR_MIESZKANIA, VKOD_POCZTOWY, VMIEJSCOWOSC);
    INSERT INTO KONTAKTY(EMAIL, NR_TELEFONU1, NR_TELEFONU2) VALUES (VEMAIL, VNR_TELEFONU1, VNR_TELEFONU2);
    INSERT INTO DANE_LOGOWANIA VALUES(VLOGIN, VHASLO);
    INSERT INTO KLIENCI(IMIE, NAZWISKO, LOGIN, ID_ADRESU, ID_KONTAKTU) VALUES (VIMIE, VNAZWISKO, VLOGIN , ADR_SEQ.CURRVAL, KONTAKT_SEQ.CURRVAL);
END NowyUser;

CREATE OR REPLACE FUNCTION LACZNA_WARTOSC_NA_KATEGORIE
     (VID_KLIENTA IN NUMBER,
     VNAZWA IN VARCHAR)
     RETURN NUMBER IS
     VSUMAWYDANA NUMBER(12, 2);
BEGIN
     SELECT SUM(P.KWOTA) INTO VSUMAWYDANA
     FROM TRANSAKCJE T LEFT JOIN PLATNOSCI P ON P.ID_PLATNOSCI = T.ID_PLATNOSCI 
     WHERE T.ID_KATEGORII IN (SELECT ID_KATEGORII FROM KATEGORIE WHERE NAZWA_KATEGORII LIKE VNAZWA) 
     AND T.ID_KLIENTA = VID_KLIENTA
     AND T.DATA BETWEEN EXTRACT(YEAR FROM CURRENT_DATE) || '/' || EXTRACT(MONTH FROM CURRENT_DATE) || '/01' AND CURRENT_DATE;
     
     RETURN VSUMAWYDANA;
END LACZNA_WARTOSC_NA_KATEGORIE;

CREATE OR REPLACE PROCEDURE NowaTransakcja(
    VID IN NUMBER,
    VKWOTA IN VARCHAR,
    VSKLEP IN VARCHAR,
    VKATEGORIA IN VARCHAR,
    VDATA IN VARCHAR,
    VSPOSOB IN VARCHAR,
    VOCENA IN NUMBER,
    VKOMENTARZ IN VARCHAR
    ) IS
BEGIN
    INSERT INTO PLATNOSCI(KWOTA, SPOSOB, ID_KLIENTA) 
    VALUES 
    (CAST(VKWOTA as NUMBER(14,2)), VSPOSOB, VID);
    
    INSERT INTO TRANSAKCJE(ID_KLIENTA, NAZWA_SKLEPU, ID_KATEGORII, DATA, ID_PLATNOSCI, OCENA, KOMENTARZ) 
    VALUES 
    (VID, VSKLEP, (SELECT ID_KATEGORII FROM KATEGORIE WHERE NAZWA_KATEGORII LIKE VKATEGORIA), CAST(VDATA AS DATE), PLAT_SEQ.CURRVAL, VOCENA, VKOMENTARZ );
    
    UPDATE SKLEPY SET OCENA = (SELECT ROUND(((COUNT(OCENA)* AVG(OCENA) + VOCENA) / (COUNT(OCENA) + 1)), 1)  FROM TRANSAKCJE WHERE NAZWA_SKLEPU LIKE VSKLEP) WHERE NAZWA_SKLEPU LIKE VSKLEP;
    
END;


create or replace PROCEDURE updateUserInformation(
    VIMIE IN VARCHAR,
    VNAZWISKO IN VARCHAR,
    VLOGIN IN VARCHAR, 
    VHASLO IN VARCHAR,
    VULICA IN VARCHAR,
    VNR_DOMU IN NUMBER,
    VNR_MIESZKANIA IN NUMBER,
    VKOD_POCZTOWY IN NUMBER,
    VMIEJSCOWOSC IN VARCHAR,
    VEMAIL IN VARCHAR,
    VNR_TELEFONU1 IN NUMBER,
    VNR_TELEFONU2 IN NUMBER,
    VID_ADRESSU IN NUMBER,
    VID_KONTAKTU IN NUMBER,
    VLOGIN2 IN VARCHAR,
    VID IN NUMBER
    ) IS
BEGIN
    UPDATE ADRESY SET ULICA = VULICA, NR_DOMU = VNR_DOMU, NR_MIESZKANIA = VNR_MIESZKANIA, KOD_POCZTOWY = VKOD_POCZTOWY, MIEJSCOWOSC = VMIEJSCOWOSC WHERE ID_ADRESU = VID_ADRESSU;
    UPDATE KONTAKTY SET EMAIL = VEMAIL, NR_TELEFONU1 = VNR_TELEFONU1, NR_TELEFONU2 = VNR_TELEFONU2 WHERE ID_KONTAKTU = VID_KONTAKTU;
    UPDATE DANE_LOGOWANIA SET LOGIN = VLOGIN, HASLO = VHASLO WHERE LOGIN = VLOGIN2;
    UPDATE KLIENCI SET IMIE = VIMIE, NAZWISKO = VNAZWISKO, LOGIN = VLOGIN WHERE ID_KLIENTA = VID;
END updateUserInformation;

create index id_kat_idx on kategorie(nazwa_kategorii);